/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import {
  DigiatProofsParam,
  digiatProofsParamBeet,
} from '../types/DigiatProofsParam'

/**
 * @category Instructions
 * @category CreateProofs
 * @category generated
 */
export type CreateProofsInstructionArgs = {
  createProofsParam: DigiatProofsParam
}
/**
 * @category Instructions
 * @category CreateProofs
 * @category generated
 */
export const createProofsStruct = new beet.FixableBeetArgsStruct<
  CreateProofsInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['createProofsParam', digiatProofsParamBeet],
  ],
  'CreateProofsInstructionArgs'
)
/**
 * Accounts required by the _createProofs_ instruction
 *
 * @property [_writable_] digProofsAcc
 * @property [_writable_, **signer**] authority
 * @property [_writable_] digIdentityAcc
 * @category Instructions
 * @category CreateProofs
 * @category generated
 */
export type CreateProofsInstructionAccounts = {
  digProofsAcc: web3.PublicKey
  authority: web3.PublicKey
  digIdentityAcc: web3.PublicKey
  systemProgram?: web3.PublicKey
}

export const createProofsInstructionDiscriminator = [
  190, 2, 174, 152, 148, 192, 222, 179,
]

/**
 * Creates a _CreateProofs_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CreateProofs
 * @category generated
 */
export function createCreateProofsInstruction(
  accounts: CreateProofsInstructionAccounts,
  args: CreateProofsInstructionArgs,
  programId = new web3.PublicKey('4HYr7M3ytiSoqr3Zh3iK1VcNNm7ZgrNikwmWYJdGMvw4')
) {
  const [data] = createProofsStruct.serialize({
    instructionDiscriminator: createProofsInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.digProofsAcc,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.authority,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.digIdentityAcc,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
